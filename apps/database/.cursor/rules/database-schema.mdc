# Drizzle ORM Database Development Guidelines

## Project Structure

- Main export: [apps/database/src/index.ts](mdc:apps/database/src/index.ts)
- Schema definitions: [apps/database/src/schema/](mdc:apps/database/src/schema/)
- Configuration: [apps/database/drizzle.config.ts](mdc:apps/database/drizzle.config.ts)
- Migrations: [apps/database/drizzle/](mdc:apps/database/drizzle/)

## Schema Development

- Use PostgreSQL with Drizzle ORM
- Define tables using `pgTable` from `drizzle-orm/pg-core`
- Export schemas from individual files in `src/schema/`
- Follow the pattern from [apps/database/src/schema/dummy.ts](mdc:apps/database/src/schema/dummy.ts)

## Migration Workflow

- Generate migrations: `pnpm --filter database generate`
- Run migrations: `pnpm --filter database migrate`
- Migrations are stored in `drizzle/` directory
- Use semantic versioning for migration files

## Package Configuration

- Export compiled JavaScript and TypeScript types
- Use ES modules (`"type": "module"`)
- Build with TypeScript: `"build": "tsc"`
- Dependencies: `drizzle-orm`, `pg`, `dotenv`

## Database Connection

- Use PostgreSQL driver (`pg`)
- Configure connection with environment variables
- Export database instance and schemas for use in other packages
- Handle connection pooling appropriately
  description:
  globs:
  alwaysApply: false

---
